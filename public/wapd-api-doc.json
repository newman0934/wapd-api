{
  "swagger": "2.0",
  "info": {
    "description": "Wapd api document for front-end developer",
    "version": "1.0.0",
    "title": "Wapd",
    "contact": {
      "email": "uu9924079@gmail.com"
    }
  },
  "host": "https://wapd-backend.herokuapp.com/",
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "tags": [
    {
      "name": "products",
      "description": "Product data"
    },
    {
      "name": "admins",
      "description": "Admin routes"
    },
    {
      "name": "users",
      "description": "Operations about user"
    },
    {
      "name": "categories",
      "description": "Operations about category"
    },
    {
      "name": "coupons",
      "description": "Operations about coupon"
    },
    {
      "name": "orders",
      "description": "Operations about order"
    },
    {
      "name": "carts",
      "description": "Operations about cart"
    }
  ],
  "paths": {
    "/api/signup": {
      "post": {
        "tags": ["users"],
        "summary": "Creating an user and login directly",
        "description": "",
        "operationId": "userController.signup",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Your personal data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "passwordCheck": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/signin": {
      "post": {
        "tags": ["users"],
        "summary": "Login directly",
        "description": "",
        "operationId": "userController.signin",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Your personal data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/edit": {
      "get": {
        "tags": ["products"],
        "summary": "Return user data",
        "description": "",
        "operationId": "userController.getUserEdit",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Return result",
        "description": "",
        "operationId": "userController.putUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "personal data you want to change",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string",
                  "required": "true"
                },
                "birthday": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/password_change": {
      "post": {
        "tags": ["users"],
        "summary": "Change user's password",
        "description": "",
        "operationId": "userController.postPasswordChange",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Your personal data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "usedPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                },
                "passwordCheck": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/password_forget": {
      "post": {
        "tags": ["users"],
        "summary": "Send an token to reset user's password",
        "description": "",
        "operationId": "userController.postPasswordForget",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Your email",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/password_reset/{token_id}/{token}": {
      "get": {
        "tags": ["users"],
        "summary": "Reset password",
        "description": "",
        "operationId": "userController.getPasswordReset",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "description": "Token id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "product": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/password_reset": {
      "post": {
        "tags": ["users"],
        "summary": "Reset user's password",
        "description": "",
        "operationId": "userController.postPasswordReset",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Your email",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                },
                "userId": {
                  "type": "integer"
                },
                "password": {
                  "type": "string"
                },
                "passwordCheck": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/products/notLoginCart": {
      "post": {
        "tags": ["carts"],
        "summary": "user is not logged in and add product to cart",
        "description": "",
        "operationId": "cartController.notLoginPostCart",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "item info",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "integer"
                },
                "size": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/products/cart": {
      "post": {
        "tags": ["carts"],
        "summary": "user is logged in and add product to cart",
        "description": "",
        "operationId": "cartController.postCart",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "item info",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "integer"
                },
                "size": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/cart": {
      "get": {
        "tags": ["carts"],
        "summary": "Return user cart",
        "description": "",
        "operationId": "cartController.getUserCart",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "cartItem": {
                      "type": "array",
                      "example": "[{cartItem object}, {cartItem object}]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/cart/{item_id}": {
      "put": {
        "tags": ["carts"],
        "summary": "edit cart item's quantity",
        "description": "",
        "operationId": "cartController.putCartQuantity",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "id of product property you want to change",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Size and color you want to change",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": ["carts"],
        "summary": "delete cart item",
        "description": "",
        "operationId": "cartController.deleteCartProduct",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "id of product you want to delete",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/wishlist": {
      "get": {
        "tags": ["users"],
        "summary": "Display user's wishlist",
        "description": "returns an array of objects",
        "operationId": "userController.getUserWishlist",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "type": "array",
                  "example": "[{product object}, {product object}]"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/{id}/wishlist": {
      "post": {
        "tags": ["products"],
        "summary": "Adding product to wishlist",
        "description": "",
        "operationId": "productController.addWishlist",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of product you want to add",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["products"],
        "summary": "Deleting product from wishlist",
        "description": "",
        "operationId": "productController.deleteWishlist",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of product you want to delete",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/orders": {
      "get": {
        "tags": ["users"],
        "summary": "Display user's orders",
        "description": "returns an array of objects",
        "operationId": "userController.getUserOrders",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "type": "array",
                  "example": "[{order object}, {order object}]"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["orders"],
        "summary": "Adding product to order from cart",
        "description": "",
        "operationId": "productController.addWishlist",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Coupon you want to use",
            "schema": {
              "type": "object",
              "properties": {
                "coupon": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/orders/{order_id}": {
      "get": {
        "tags": ["users"],
        "summary": "Display an order by id",
        "description": "",
        "operationId": "userController.getUserOrder",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "ID of order to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object",
            "schema": {
              "type": "object",
              "properties": {
                "orders": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "total_price": {
                      "type": "integer"
                    },
                    "shipping_status": {
                      "type": "string"
                    },
                    "shipping_method": {
                      "type": "string"
                    },
                    "payment_status": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "payment_method": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "receiver_name": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "sn": {
                      "type": "string"
                    },
                    "UserId": {
                      "type": "integer"
                    },
                    "CouponId": {
                      "type": "integer"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "Coupon": {
                      "type": "string"
                    },
                    "items": {
                      "type": "array",
                      "example": "[{item Object}, {item Object}]"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/orders/{id}/checkout": {
      "get": {
        "tags": ["orders"],
        "summary": "Display an order's checkout",
        "description": "",
        "operationId": "orderController.getCheckout",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object",
            "schema": {
              "type": "object",
              "properties": {
                "orderItems": {
                  "type": "array",
                  "example": "[{orderItem Object}, {orderItem Object}]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/orders/checkout": {
      "post": {
        "tags": ["admins"],
        "summary": "Post order and get to payment page",
        "description": "",
        "operationId": "orderController.postCheckout",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Post order and get to payment page",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "receiverName": {
                  "type": "string"
                },
                "receiverPhone": {
                  "type": "string"
                },
                "receiverAddress": {
                  "type": "string"
                },
                "receiverEmail": {
                  "type": "string"
                },
                "total": {
                  "type": "integer"
                },
                "orderId": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/orders/{id}/payment": {
      "get": {
        "tags": ["orders"],
        "summary": "Display payment of a order",
        "description": "",
        "operationId": "orderController.getPayment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/paymentcomplete": {
      "get": {
        "tags": ["orders"],
        "summary": "Display payment complete page",
        "description": "",
        "operationId": "orderController.getPaymentComplete",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "status",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "tags": ["products"],
        "summary": "Display products which status are on",
        "description": "returns an array of objects",
        "operationId": "productController.getProducts",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "type": "array",
                  "example": "[{product object}, {product object}]"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": ["products"],
        "summary": "Find product by ID",
        "description": "returns a single product",
        "operationId": "productController.getProduct",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "product": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "CategoryId": {
                      "type": "integer"
                    },
                    "category": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "example": "[{image Object}, {image Object}]"
                    },
                    "size": {
                      "type": "array",
                      "example": "[S, M, L]"
                    },
                    "color": {
                      "type": "array",
                      "example": "[blue, red, green]"
                    },
                    "stock": {
                      "type": "array",
                      "example": "[1, 3, 4]"
                    },
                    "origin_price": {
                      "type": "integer"
                    },
                    "sell_price": {
                      "type": "integer"
                    },
                    "isFavorited": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admins/products": {
      "get": {
        "tags": ["admins"],
        "summary": "Display all products",
        "description": "",
        "operationId": "adminController.getProducts",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "return all products",
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "type": "array",
                  "example": "[{product object}, {product object}]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["admins"],
        "summary": "Creating product property",
        "description": "",
        "operationId": "adminController.addProduct",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Size and color you want to change",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "categoryId": {
                  "type": "integer"
                },
                "cost": {
                  "type": "integer"
                },
                "originPrice": {
                  "type": "integer"
                },
                "sellPrice": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/products/{id}": {
      "get": {
        "tags": ["admins"],
        "summary": "Display product by id",
        "description": "",
        "operationId": "adminController.getProduct",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object",
            "schema": {
              "type": "object",
              "properties": {
                "productStatus": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "origin_price": {
                      "type": "integer"
                    },
                    "sell_price": {
                      "type": "integer"
                    },
                    "CategoryId": {
                      "type": "integer"
                    },
                    "category": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "example": "[{image Object}, {image Object}]"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": ["admins"],
        "summary": "Creating product property",
        "description": "",
        "operationId": "adminController.putProduct",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Size and color you want to change",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "categoryId": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "originPrice": {
                  "type": "integer"
                },
                "sellPrice": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["admins"],
        "summary": "Deleting product",
        "description": "",
        "operationId": "adminController.deleteProduct",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of product you want to delete",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully deleted",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/products/{id}/stocks": {
      "get": {
        "tags": ["admins"],
        "summary": "Display product stocks by id",
        "description": "",
        "operationId": "adminController.getProductStocks",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "productStatus": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "stock": {
                      "type": "integer"
                    },
                    "size": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    },
                    "ProductId": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/products/{id}/stocks/{stock_id}": {
      "get": {
        "tags": ["admins"],
        "summary": "Display product stocks prop by id and stock_id",
        "description": "This route is for editing product props",
        "operationId": "adminController.getProductStocksEdit",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "stock_id",
            "in": "path",
            "description": "ID of product property to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": ["admins"],
        "summary": "Updating product property",
        "description": "",
        "operationId": "adminController.putProductStockProps",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of product you want to change",
            "required": true,
            "type": "integer"
          },
          {
            "name": "stock_id",
            "in": "path",
            "description": "id of product property you want to change",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Size and color you want to change",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "color": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully edited",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["admins"],
        "summary": "Deleting product property",
        "description": "",
        "operationId": "adminController.deleteProductStockProp",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of product you want to change",
            "required": true,
            "type": "integer"
          },
          {
            "name": "stock_id",
            "in": "path",
            "description": "id of product property you want to change",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully deleted",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/orders": {
      "get": {
        "tags": ["admins"],
        "summary": "Display all orders",
        "description": "",
        "operationId": "adminController.getOrders",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "return all orders",
            "schema": {
              "type": "object",
              "properties": {
                "orders": {
                  "type": "array",
                  "example": "[{order object}, {order object}]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/orders/{id}": {
      "get": {
        "tags": ["admins"],
        "summary": "Display order by id",
        "description": "",
        "operationId": "adminController.getOrder",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object",
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "UserId": {
                      "type": "integer"
                    },
                    "receiver_name": {
                      "type": "string"
                    },
                    "total_price": {
                      "type": "integer"
                    },
                    "sn": {
                      "type": "integer"
                    },
                    "shipping_status": {
                      "type": "string"
                    },
                    "shipping_method": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "payment_status": {
                      "type": "string"
                    },
                    "payment_method": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "orderItems": {
                      "type": "array",
                      "example": "[{orderItem Object}, {orderItem Object}]"
                    },
                    "coupon": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": ["admins"],
        "summary": "Updating order",
        "description": "",
        "operationId": "adminController.putOrder",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of product you want to change",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Size and color you want to change",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phone": {
                  "type": "string"
                },
                "receiver_name": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully edited",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/products/{id}/stocks/": {
      "post": {
        "tags": ["admins"],
        "summary": "Creating product property",
        "description": "",
        "operationId": "adminController.addProductStockProps",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of product you want to create new property",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Size and color you want to change",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "color": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/categories": {
      "get": {
        "tags": ["categories"],
        "summary": "Display all categories",
        "description": "",
        "operationId": "categoryController.getCategories",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "return all categories",
            "schema": {
              "type": "object",
              "properties": {
                "orders": {
                  "type": "array",
                  "example": "[{category object}, {category object}]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["categories"],
        "summary": "Creating category",
        "description": "",
        "operationId": "categoryController.addCategory",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "category name",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/categories/{id}": {
      "put": {
        "tags": ["categories"],
        "summary": "Updating category",
        "description": "",
        "operationId": "categoryController.putCategory",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of category you want to change",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Size and color you want to change",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully edited",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["categories"],
        "summary": "Updating category",
        "description": "",
        "operationId": "categoryController.deleteCategory",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of category you want to delete",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully deleted",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/users": {
      "get": {
        "tags": ["admins"],
        "summary": "Display all users",
        "description": "",
        "operationId": "adminController.getUsers",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "return all users",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "example": "[{user object}, {user object}]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/users/{id}/orders": {
      "get": {
        "tags": ["admins"],
        "summary": "Display user's orders by id",
        "description": "",
        "operationId": "adminController.getUserOrders",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "orders": {
                      "type": "array",
                      "example": "[{orderItem Object}, {orderItem Object}]"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/coupons": {
      "get": {
        "tags": ["coupons"],
        "summary": "Display coupons",
        "description": "",
        "operationId": "couponController.getCoupons",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object",
            "schema": {
              "type": "object",
              "properties": {
                "coupons": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "example": "[{coupon Object}, {coupon Object}]"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["coupons"],
        "summary": "Create a coupon",
        "description": "",
        "operationId": "couponController.addCoupon",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "coupon code and discount you want to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "couponCode": {
                  "type": "string"
                },
                "discountAmount": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object",
            "schema": {
              "type": "object",
              "properties": {
                "coupons": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "example": "[{coupon Object}, {coupon Object}]"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/coupons/{id}": {
      "delete": {
        "tags": ["coupons"],
        "summary": "Updating coupon",
        "description": "",
        "operationId": "couponController.deleteCoupon",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of coupon you want to delete",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully deleted",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admins/orders/transition": {
      "post": {
        "tags": ["orders"],
        "summary": "Check a transition",
        "description": "",
        "operationId": "orderController.postTransition",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "send sn, amt to check an existing order",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sn": {
                  "type": "integer"
                },
                "amt": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "type": "string",
            "in": "header",
            "required": true
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "definitions": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "origin_price": {
            "type": "integer",
            "format": "int64"
          },
          "sell_price": {
            "type": "integer",
            "format": "int64"
          },
          "CategoryId": {
            "type": "integer",
            "description": "Foreign Key of Category",
            "format": "int64"
          }
        },
        "xml": {
          "name": "Product"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "birthday": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "total_price": {
            "type": "integer",
            "format": "int64"
          },
          "shipping_status": {
            "type": "string"
          },
          "shipping_method": {
            "type": "string"
          },
          "payment_status": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "payment_method": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "receiver_name": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "sn": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/definitions/Category"
          },
          "UserId": {
            "type": "string"
          },
          "CouponId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "example": "doggie"
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    }
  }
}
